name: Automated Testing

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Java/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Java/**'
  schedule:
    - cron: '0 0 * * 3'  # Run weekly on Wednesday at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Run unit tests
        run: |
          cd Java
          mvn -B test
          
      - name: Generate JaCoCo report
        run: |
          cd Java
          mvn -B jacoco:report
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: Java/target/surefire-reports
          retention-days: 7
          
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: Java/target/site/jacoco
          retention-days: 7
          
      - name: Check test coverage
        run: |
          cd Java
          mvn -B jacoco:check -Djacoco.minimum.coverage=0.80
          
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Set up Kubernetes (Kind)
        uses: helm/kind-action@v1.5.0
        
      - name: Run integration tests
        run: |
          cd Java
          mvn -B verify -Pintegration-tests
          
      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: Java/target/failsafe-reports
          retention-days: 7
          
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Set up Kubernetes (Kind)
        uses: helm/kind-action@v1.5.0
        
      - name: Build Docker image
        run: |
          cd Java
          docker build -t microservice-bootstrap-operator:test .
          kind load docker-image microservice-bootstrap-operator:test
          
      - name: Deploy operator to Kind
        run: |
          cd Java
          kubectl apply -f k8s/appconfig-crd.yaml
          helm upgrade --install microservice-bootstrap-operator ../helm/microservice-bootstrap-operator \
            --set image.repository=microservice-bootstrap-operator \
            --set image.tag=test \
            --set image.pullPolicy=Never \
            --namespace microservice-bootstrap-operator-system \
            --create-namespace
          
      - name: Run E2E tests
        run: |
          cd Java
          # Wait for operator to be ready
          kubectl wait --for=condition=available --timeout=60s deployment/microservice-bootstrap-operator -n microservice-bootstrap-operator-system
          
          # Apply test resources
          kubectl apply -f k8s/samples/secret-rotation-samples.yaml
          
          # Run E2E test script
          ./scripts/run-e2e-tests.sh
          
      - name: Collect logs
        if: always()
        run: |
          mkdir -p logs
          kubectl logs -n microservice-bootstrap-operator-system deployment/microservice-bootstrap-operator > logs/operator.log
          
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-logs
          path: logs
          retention-days: 7
          
  test-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    if: always()
    
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v3
        with:
          path: test-results
          
      - name: Publish test report
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'test-results/*/surefire-reports/TEST-*.xml,test-results/*/failsafe-reports/TEST-*.xml'
          check_name: 'Test Report'
          fail_on_failure: true
